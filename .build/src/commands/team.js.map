{
  "version": 3,
  "sources": ["../../../src/commands/team.ts"],
  "sourcesContent": ["import { ActionRowBuilder, BaseInteraction, ButtonBuilder, ButtonStyle } from 'discord.js'\r\nimport { Command } from '../types/command'\r\nimport { TEAMS } from '../constants'\r\nimport { guilds } from '../../index'\r\n\r\nexport default {\r\n  commandType: 'guild',\r\n  name: 'team',\r\n  description: '\u30C1\u30FC\u30E0\u5206\u3051\u3092\u884C\u3044\u307E\u3059',\r\n  async execute(interaction) {\r\n    if (!interaction.inCachedGuild()) return\r\n    await interaction.deferReply({ ephemeral: false })\r\n    const key = interaction.guildId\r\n    if (!interaction.inCachedGuild()) return\r\n    const channel = interaction.member.voice.channel\r\n    if (!channel) {\r\n      await interaction.followUp('VC\u306B\u53C2\u52A0\u4E2D\u306E\u307F\u4F7F\u7528\u53EF\u80FD\u3067\u3059')\r\n      return\r\n    }\r\n    const botMessage = await interaction.followUp(`\u8AAD\u307F\u8FBC\u307F\u4E2D\u2026`)\r\n    const members = channel.members.filter((m: { user: { bot: any } }) => !m.user.bot)\r\n    const division = TEAMS\r\n    const teamSize = Math.ceil(members.size / division)\r\n    const teamFunc = async (int?: BaseInteraction) => {\r\n      const players = members.clone()\r\n      let under = division * teamSize - players.size\r\n      const teams = new Array(division).fill(null).map((_, i) => {\r\n        const handicap = Math.ceil(under / (division - i))\r\n        under -= handicap\r\n        const num = teamSize - handicap\r\n        const rands = players.random(num)\r\n        players.sweep((p: any) => rands.includes(p))\r\n        return rands\r\n      })\r\n      const content = teams.reduce((acc, members, i) => {\r\n        const index = i + 1\r\n        return acc + `\u30C1\u30FC\u30E0${index}\\n` + members.map((m: { toString: () => any }) => m.toString()).join('\\n') + '\\n\\n'\r\n      }, '')\r\n      const components = [\r\n        new ActionRowBuilder<ButtonBuilder>().addComponents([\r\n          new ButtonBuilder().setCustomId('cancel').setStyle(ButtonStyle.Danger).setLabel('\u30AD\u30E3\u30F3\u30BB\u30EB'),\r\n          new ButtonBuilder().setCustomId('move').setStyle(ButtonStyle.Success).setLabel('\u79FB\u52D5'),\r\n          new ButtonBuilder().setCustomId('again').setStyle(ButtonStyle.Primary).setLabel('\u518D\u62BD\u9078'),\r\n        ]),\r\n      ]\r\n      int?.isButton() ? await int.update({ content, components }) : await interaction.editReply({ content, components })\r\n      const filter = (i: BaseInteraction) =>\r\n        i.isButton() && ['cancel', 'move', 'again'].includes(i.customId) && i.user.id === interaction.user.id\r\n      const res = await botMessage.awaitMessageComponent({ filter }).catch(async () => {\r\n        components[0]?.components?.forEach((c: { setDisabled: () => any }) => c?.setDisabled())\r\n        await botMessage.edit({ content, components }).catch(() => {\r\n          return\r\n        })\r\n      })\r\n      if (!res) return\r\n      switch (res.customId) {\r\n        case 'cancel': {\r\n          await botMessage.delete().catch(() => {\r\n            return\r\n          })\r\n          break\r\n        }\r\n        case 'move': {\r\n          await res.update({ content, components: [] })\r\n          const channels = guilds.get(key)\r\n          const VCs = channels.VCs\r\n          teams.forEach((members, i) => {\r\n            members.forEach((member: { voice: { channel: any; setChannel: (arg0: any) => void } }) => {\r\n              if (!member.voice.channel) return\r\n              member.voice.setChannel(VCs[i])\r\n            })\r\n          })\r\n          break\r\n        }\r\n        case 'again': {\r\n          await teamFunc(res)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    await teamFunc()\r\n  },\r\n} as Command\r\n"],
  "mappings": "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",
  "names": ["members"]
}
