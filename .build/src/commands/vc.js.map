{
  "version": 3,
  "sources": ["../../../src/commands/vc.ts"],
  "sourcesContent": ["import { ApplicationCommandOptionType, ChannelType } from 'discord.js'\r\nimport { TEAMS } from '../constants'\r\nimport { guilds } from '../../index'\r\nimport { Command } from '../types/command'\r\n\r\nexport default {\r\n  commandType: 'guild',\r\n  name: 'vc',\r\n  description: '\u30C1\u30FC\u30E0\u30DC\u30A4\u30B9\u30C1\u30E3\u30C3\u30C8\u3092\u8A2D\u5B9A\u3057\u307E\u3059',\r\n  options: [\r\n    ...Array(TEAMS)\r\n      .fill({\r\n        type: ApplicationCommandOptionType.Channel,\r\n        required: true,\r\n      })\r\n      .map((t, i) => {\r\n        const index = i + 1\r\n        return { ...t, name: `vc${index}`, description: `VC${index}` }\r\n      }),\r\n    {\r\n      type: ApplicationCommandOptionType.Channel,\r\n      name: 'home',\r\n      description: 'Home',\r\n      required: false,\r\n    },\r\n  ],\r\n  async execute(interaction) {\r\n    if (!interaction.inCachedGuild()) return\r\n    const key = interaction.guildId\r\n    await interaction.deferReply({ ephemeral: true })\r\n    if (!interaction.guild?.members.me?.roles?.botRole) {\r\n      await interaction.followUp('Bot\u306B\u5FC5\u8981\u306A\u30ED\u30FC\u30EB\u304C\u4ED8\u4E0E\u3055\u308C\u3066\u3044\u307E\u305B\u3093')\r\n      return\r\n    }\r\n    const options = interaction.options\r\n    const VCs = Array(TEAMS)\r\n      .fill(null)\r\n      .map((_, i) => {\r\n        const index = i + 1\r\n        const channel = options.getChannel(`vc${index}`)\r\n        return channel\r\n      })\r\n    const channelHome = options.getChannel('home')\r\n    const notVCs = [...VCs, channelHome].filter((ch) => ch).filter((ch) => ch?.type !== ChannelType.GuildVoice)\r\n    if (notVCs.length) {\r\n      await interaction.followUp(`${notVCs.join(', ')} \u306F\u30DC\u30A4\u30B9\u30C1\u30E3\u30F3\u30CD\u30EB\u3067\u306F\u3042\u308A\u307E\u305B\u3093`)\r\n      return\r\n    }\r\n    const home = channelHome ?? VCs.at(0)\r\n    const channels = {\r\n      home: home?.id,\r\n      VCs: VCs.map((ch) => ch?.id),\r\n    }\r\n    guilds.set(key, channels)\r\n    await interaction.followUp(\r\n      `\u4EE5\u4E0B\u306E\u5185\u5BB9\u3067\u8A2D\u5B9A\u3057\u307E\u3057\u305F\\n\\n${VCs.reduce((acc, vc, i) => {\r\n        const index = i + 1\r\n        return acc + `VC${index} : ${vc}\\n`\r\n      }, '')}\\nHome : ${home}`\r\n    )\r\n  },\r\n} as Command\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0D;AAC1D,uBAAsB;AACtB,eAAuB;AAGvB,IAAO,aAAQ;AAAA,EACb,aAAa;AAAA,EACb,MAAM;AAAA,EACN,aAAa;AAAA,EACb,SAAS;AAAA,IACP,GAAG,MAAM,sBAAK,EACX,KAAK;AAAA,MACJ,MAAM,4CAA6B;AAAA,MACnC,UAAU;AAAA,IACZ,CAAC,EACA,IAAI,CAAC,GAAG,MAAM;AACb,YAAM,QAAQ,IAAI;AAClB,aAAO,EAAE,GAAG,GAAG,MAAM,KAAK,SAAS,aAAa,KAAK,QAAQ;AAAA,IAC/D,CAAC;AAAA,IACH;AAAA,MACE,MAAM,4CAA6B;AAAA,MACnC,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAM,QAAQ,aAAa;AA1B7B;AA2BI,QAAI,CAAC,YAAY,cAAc;AAAG;AAClC,UAAM,MAAM,YAAY;AACxB,UAAM,YAAY,WAAW,EAAE,WAAW,KAAK,CAAC;AAChD,QAAI,GAAC,6BAAY,UAAZ,mBAAmB,QAAQ,OAA3B,mBAA+B,UAA/B,mBAAsC,UAAS;AAClD,YAAM,YAAY,SAAS,2GAAsB;AACjD;AAAA,IACF;AACA,UAAM,UAAU,YAAY;AAC5B,UAAM,MAAM,MAAM,sBAAK,EACpB,KAAK,IAAI,EACT,IAAI,CAAC,GAAG,MAAM;AACb,YAAM,QAAQ,IAAI;AAClB,YAAM,UAAU,QAAQ,WAAW,KAAK,OAAO;AAC/C,aAAO;AAAA,IACT,CAAC;AACH,UAAM,cAAc,QAAQ,WAAW,MAAM;AAC7C,UAAM,SAAS,CAAC,GAAG,KAAK,WAAW,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,QAAO,yBAAI,UAAS,2BAAY,UAAU;AAC1G,QAAI,OAAO,QAAQ;AACjB,YAAM,YAAY,SAAS,GAAG,OAAO,KAAK,IAAI,oGAAoB;AAClE;AAAA,IACF;AACA,UAAM,OAAO,eAAe,IAAI,GAAG,CAAC;AACpC,UAAM,WAAW;AAAA,MACf,MAAM,6BAAM;AAAA,MACZ,KAAK,IAAI,IAAI,CAAC,OAAO,yBAAI,EAAE;AAAA,IAC7B;AACA,oBAAO,IAAI,KAAK,QAAQ;AACxB,UAAM,YAAY;AAAA,MAChB;AAAA;AAAA,EAAmB,IAAI,OAAO,CAAC,KAAK,IAAI,MAAM;AAC5C,cAAM,QAAQ,IAAI;AAClB,eAAO,MAAM,KAAK,WAAW;AAAA;AAAA,MAC/B,GAAG,EAAE;AAAA,SAAa;AAAA,IACpB;AAAA,EACF;AACF;",
  "names": []
}
